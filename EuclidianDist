
import numpy as np
import pandas as pd
from scipy.spatial import distance
from scipy import stats
from sklearn import preprocessing as pr

A = np.array([[1,2,3],
             [4,5,6],
             [7,8,9]])

S = np.array([[ 1, 1, 0],
              [-1, 0, 1],
              [ 0,-1,-1]])



AS = stats.zscore(A,ddof=1)

AT  = np.transpose(A)
ATS  = np.transpose(AS)

CI = 1/(np.cov(A,ddof=0))

R = np.dot(AT,S)
RS = np.dot(ATS,S)


D1 = np.sqrt(np.dot(np.transpose(R),R))
D = np.sqrt(D1)
DD = np.sqrt(np.abs(np.dot(np.transpose(R),CI)))
DC = np.sqrt(np.abs(np.dot(DD,R)))
DS = np.sqrt(np.dot(np.transpose(RS),RS))

print('R:')
print(R)
print('RT:')
print(np.transpose(R))
print('D1:')
print(D1)
print('D:')
print(D)

print('C:')
print(np.cov(A,ddof=0))
print('CI:')
print(1/(np.cov(A,ddof=0)))

print('CI2:')
#print(np.linalg.inv(np.cov(A,ddof=0)))

print('R:')
print(np.dot(np.transpose(R),CI))

print('A:')
print(A)
print('AS:')
print(AS)
print('D:')
print(np.diag(D))
print('DS:')
print(np.diag(DS))
print('DC:')
print(np.diag(DC))


cv = np.reshape(np.diag(np.cov(AT, ddof=0)),(3,3))

#print(x)
#print(y)
print(cv)
#print(distance.mahalanobis(x,y,cv))

